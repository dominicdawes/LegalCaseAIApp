import os
import json
import openai  # Ensure openai is installed
from openai import OpenAI

# Configuration: Fetch the DeepSeek API key and set the Base URL.
DEEPSEEK_API_KEY = os.environ.get("DEEPSEEK_API", "sk-10c7b6e04fca4b34a7ced9bd8b0bc679")
DEEPSEEK_BASE_URL = "https://api.deepseek.com"

# Initialize the OpenAI client to work with DeepSeek.
client = OpenAI(api_key=DEEPSEEK_API_KEY, base_url=DEEPSEEK_BASE_URL)

def generate_flashcards(raw_text: str, model: str = "deepseek-chat") -> list:
    """
    Generates flashcards from the provided legal text using DeepSeek's chat completions API.
    
    This function crafts a prompt instructing the model to analyze the legal text and generate flashcards.
    Each flashcard will have a key legal term as 'Front' and a succinct definition as 'Back'.
    
    Parameters:
        raw_text (str): The legal text to analyze.
        model (str): The DeepSeek model to use (default: "deepseek-chat").
    
    Returns:
        list: A list of flashcard dictionaries in the format 
              [{'Front': 'Key Term', 'Back': 'Definition'}, ...].
              If the response is empty or cannot be parsed as JSON, returns the raw response content.
    """
    messages = [
        {"role": "system", "content": "You are a helpful assistant that generates flashcards for legal text."},
        {"role": "user", "content": f"Analyze the following legal text and generate flashcards. Each flashcard should include a key legal term as 'Front' and a very succinct definition as 'Back':\n\n{raw_text}"}
    ]
    
    response = client.chat.completions.create(
        model=model,
        messages=messages,
        stream=False
    )
    
    message_content = response.choices[0].message.content
    
    # Check if the response content is empty.
    if not message_content.strip():
        return "No response from API."
    
    try:
        flashcards = json.loads(message_content)
    except json.JSONDecodeError:
        flashcards = message_content
    
    return flashcards

if __name__ == "__main__":
    legal_text = input("Please enter legal text: \n")
    flashcards = generate_flashcards(legal_text)
    print("\nFlashcards generated by DeepSeek:")
    print(flashcards)
